////  TaskWrapper.m//  X360Burn////  Created by 赵 栓 on 09-9-23.//  Copyright 2009 __MyCompanyName__. All rights reserved.//#import "TaskWrapper.h"@implementation TaskWrapper- (id)initWithDelegate:(id <TaskWrapperDelegate>)delegate arguments:(NSArray *)args {    self = [super init];    controller = delegate;    arguments = [args retain];        return self;}- (void)dealloc {    [self stopProcess];    [arguments release];    [task release];    [super dealloc];}- (void) startProcess {    [controller processStarted];    task = [[NSTask alloc] init];        [task setStandardOutput: [NSPipe pipe]];    [task setStandardError: [task standardOutput]];	    [task setLaunchPath: [arguments objectAtIndex:0]];	    [task setArguments: [arguments subarrayWithRange: NSMakeRange (1, ([arguments count] - 1))]];	[task launch];		[self performSelectorInBackground:@selector(runLoop) withObject:nil];}- (void) runLoop {	NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];	NSData *data;	while ((data = [[[task standardOutput] fileHandleForReading] availableData]) && [data length]) {		[controller appendOutput: [[[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding] autorelease]];	}	[controller processFinished];	controller = nil;	[pool release];}- (void) stopProcess {	[task terminate];}@end